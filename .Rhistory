f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(32,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())
Tempplot
f
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(32,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
head(f)
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
head(f)
setwd('/Users/dangates')
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,32,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(32,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,35,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(35,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,34,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(34,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
geom_polygon(data = us, aes(x=long, y = lat, group = group)
)
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=1)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=1.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
setwd('/Users/dangates')
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="grey",size=1)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=1.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
library(data.table)
#read in garrets landrace matrix
f<-fread('/Users/dangates/Downloads/idmatrix.csv')
dim(f)
f[1:10,1:10]
#read in garrets landrace matrix
f<-fread('/Users/dangates/Downloads/idmatrix.csv',row.names=1)
f<-data.frame(f)
rownames(f)<-f[,1]
f<-f[,-1]
f[1:10,1:10]
dim(f)
x<-f[1,]
#start going down the rows and finding everyone whos in the group
colnames(f)[x]
x
class(x)
c(x)
unlist(x)
#start going down the rows and finding everyone whos in the group
colnames(f)[unlist(x)]
#start going down the rows and finding everyone whos in the group
colnames(f)[which(unlist(x)==1)]
#start going down the rows and finding everyone whos in the group
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
x<-2
groups[[1]] %in% groups[[x]]
FALSE %in% (groups[[1]] %in% groups[[x]])
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
fals
falss<-c()
for (q in 1:(length(groups)-1)){
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
}
head(falss)
x<-1
x<-2
groups[[2]]
groups[[2]]
groups[[3]]
groups[[4]]
head(falss)
names(falss[which(falss==FALSE)])
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
}
head(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
falss<-falss[-which(falss==TRUE)]
}
}
names(falss)
head(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
falss<-falss[-which(falss==TRUE)]
}
}
fals
falss
q<-1
x<-2
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
fals
names(fals)<-x
fals
falss<-c(falss,fals)
falss
falss<-falss[-which(falss==TRUE)]
falss
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
falss<-falss[-which(falss==TRUE)]
}
table(names(falss))
1:100 %in% names(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
falss<-falss[-which(falss==TRUE)]
}
table(names(falss))
head(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
}
hclust(f)
f[1:10,1:10]
hclust(f)
groups
groups[[1]]==groups[[2]]
groups[[x]]==groups[[x+1]]
ind<-FALSE %in% groups[[x]]==groups[[x+1]]
ind
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
ind
x<-1
while(f==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
x
ind<-FALSE
x<-1
while(f=FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
ind<-FALSE
x<-1
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
x
#now start with a group and delete any other groups that are identical:
#start with groups[[1]] and go until you hit a TRUE
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
while(ind==FALSE){
grp[[length(grp)+1]]<-groups[[1]]
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
x
length(grp)
grp[[1]]
grp[[2]]
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
grp[[length(grp)+1]]<-groups[[x]]
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
x
length(groups)
#start going down the rows and finding everyone whos in the group
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
grp[[length(grp)+1]]<-groups[[x]]
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
grp[[1]]
grp[[2]]
sapply(grp,length)
#start going down the rows and finding everyone whos in the group
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
groups[[1]]
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
groups<-groups[order(sapply(groups,length))]
sapply(groups,length)
groups[[1]]
groups[[2]]
groups[[3]]
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
grp[[length(grp)+1]]<-groups[[x]]
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
grp
#ok now pull out the groupings that are greater than ~20
txlist<-grp[which(sapply(grp,length)>40)][1]
txlist
#ok now pull out the groupings that are greater than ~20
txlist<-grp[which(sapply(grp,length)>40)][[1]]
txlist
setwd('Desktop/AdaptationScripts2/')
library(data.table)
#Pull in the Environmental matrix
load('./GWASResiduals/WorldClimMat.Rimage')
#specify the layers you want to run (an example from a rerun is hashed out below)
#layers<-c("cld6MonthGrowAvg","dtr6MonthGrowAvg","frs6MonthGrowAvg","pet6MonthGrowAvg","pH","pre6MonthGrowAvg","tmn6MonthGrowAvg","tmp6MonthGrowAvg","tmx6MonthGrowAvg","vap6MonthGrowAvg","Waterlog.Percent","wet6MonthGrowAvg")
layer<-'cld6MonthGrowAvg'
#make a loop to run through the manhattans:
#sapply(layers,function(layer){
#layer<-'altitude'
precip<-finalMat[,layer]
names(precip)<-rownames(finalMat)
#build up some environmental GWAS
#pop structure:
load('./Genotypes/HighFilteredReduced.Rimage')
inters<-intersect(names(precip),rownames(genoMDS))
genoMDS<-genoMDS[inters,]
precip<-precip[inters]
pops<-cmdscale(dist(genoMDS),k=5)
dim(genoMDS)
names(precip)
head(finalMat)
names(precip)<-finalMat$SampleID
library(data.table)
#Pull in the Environmental matrix
load('./GWASResiduals/WorldClimMat.Rimage')
#specify the layers you want to run (an example from a rerun is hashed out below)
#layers<-c("cld6MonthGrowAvg","dtr6MonthGrowAvg","frs6MonthGrowAvg","pet6MonthGrowAvg","pH","pre6MonthGrowAvg","tmn6MonthGrowAvg","tmp6MonthGrowAvg","tmx6MonthGrowAvg","vap6MonthGrowAvg","Waterlog.Percent","wet6MonthGrowAvg")
layer<-'cld6MonthGrowAvg'
#make a loop to run through the manhattans:
#sapply(layers,function(layer){
#layer<-'altitude'
precip<-finalMat[,layer]
precip
names(precip)<-finalMat$SampleID
load('./Genotypes/HighFilteredReduced.Rimage')
inters<-intersect(names(precip),rownames(genoMDS))
genoMDS<-genoMDS[inters,]
precip<-precip[inters]
pops<-cmdscale(dist(genoMDS),k=5)
setwd('Des')
getwd()
library(GridLMM)
library(KRLS)
library(qqman)
library(data.table)
phenotypes<-c('Days to anthesis','Plant height','Anthesis silking interval','Field weight','Bare cob weight','Grain weight per hectare')
#environments<-c("wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
environments<-c('altitude','meanTemp','annualPrecipitation','vap6MonthGrowAvg','pH',"wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
phenot<-'Anthesis silking interval'
env<-'altitude'
#lapply(environments,function(env){
load(paste('./GWASResiduals/',phenot,'_',env,'_GWASResiduals.Rimage',sep=""))
head(jimbo)
phenotypes<-c('Days to anthesis','Plant height','Anthesis silking interval','Field weight','Bare cob weight','Grain weight per hectare')
#environments<-c("wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
environments<-c('altitude','meanTemp','annualPrecipitation','vap6MonthGrowAvg','pH',"wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
for (x in phenotypes){
for (y in environments){
load(paste('./GWASResiduals/',x,'_',y,'_GWASResiduals.Rimage',sep=""))
jimbo<-jimbo[,-c('trialName','treatment','year.1','collYear','residuals')]
save(jimbo,file=paste('./GWASResiduals/',x,'_',y,'_GWASResiduals.Rimage',sep=""))
}}
for (x in phenotypes){
for (y in environments){
load(paste('./GWASResiduals/',x,'_',y,'_GWASResiduals.Rimage',sep=""))
jimbo<-jimbo[,-which(colnames(jimbo) %in% c('trialName','treatment','year.1','collYear','residuals'))]
save(jimbo,file=paste('./GWASResiduals/',x,'_',y,'_GWASResiduals.Rimage',sep=""))
}}
rm(list=ls())
library(GridLMM)
library(KRLS)
library(qqman)
library(data.table)
phenotypes<-c('Days to anthesis','Plant height','Anthesis silking interval','Field weight','Bare cob weight','Grain weight per hectare')
#environments<-c("wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
environments<-c('altitude','meanTemp','annualPrecipitation','vap6MonthGrowAvg','pH',"wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
phenot<-'Anthesis silking interval'
#lapply(environments,function(env){
env<-'altitude'
#lapply(environments,function(env){
load(paste('./GWASResiduals/',phenot,'_',env,'_GWASResiduals.Rimage',sep=""))
head(jimbo)
for (x in phenotypes){
for (y in environments){
load(paste('./GWASResiduals/',x,'_',y,'_GWASResiduals.Rimage',sep=""))
jimbo<-jimbo[,-which(colnames(jimbo) %in% c('plantElv','dist','pop_1','pop_2','pop_3','pop_4','pop_5','pop_6','pop_7','pop_8'))]
save(jimbo,file=paste('./GWASResiduals/',x,'_',y,'_GWASResiduals.Rimage',sep=""))
}}
rm(list=ls())
library(GridLMM)
library(KRLS)
library(qqman)
library(data.table)
phenotypes<-c('Days to anthesis','Plant height','Anthesis silking interval','Field weight','Bare cob weight','Grain weight per hectare')
#environments<-c("wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
environments<-c('altitude','meanTemp','annualPrecipitation','vap6MonthGrowAvg','pH',"wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
phenot<-'Anthesis silking interval'
#lapply(environments,function(env){
env<-'altitude'
#lapply(environments,function(env){
load(paste('./GWASResiduals/',phenot,'_',env,'_GWASResiduals.Rimage',sep=""))
