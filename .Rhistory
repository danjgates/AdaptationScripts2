Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(32,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
head(f)
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
head(f)
setwd('/Users/dangates')
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,32,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(32,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,35,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(35,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,34,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(34,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=0.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
geom_polygon(data = us, aes(x=long, y = lat, group = group)
)
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1.5)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=1)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="black",size=1)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=1.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
setwd('/Users/dangates')
temp<-raster('/Users/dangates/wc2-5/bio1.bil')
temp@data@values<-(temp@data@values/10)*(9/5)+32
temp<-crop(temp,extent(-126,-118,33,50))
us<-map_data('worldHires','USA')
f<-read.table('/Users/dangates/Downloads/observations-38118.csv',sep=",",header=TRUE)
#colnames(f)<-c('longitude','latitude')
Tempplot<-gplot(temp)+geom_raster(aes(fill=value))+geom_polygon(data = us, aes(x=long, y = lat, group = group),fill = NA, color="grey",size=1)+
scale_fill_gradientn('Temperature',colours=c('black','dark green','green','yellow','brown','red'),na.value = NA)+
geom_point(data=f,aes(x=longitude,y=latitude),color='black',shape=19,size=1.5)+
coord_equal()+
theme_bw()+
xlim(-126,-118)+
ylim(33,50)+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_blank())+
theme(axis.ticks.x = element_blank())+
theme(axis.ticks.y = element_blank())+
theme(axis.title.y = element_blank())+
theme(legend.position="none")+
theme(axis.text.y = element_blank())
Tempplot
library(data.table)
#read in garrets landrace matrix
f<-fread('/Users/dangates/Downloads/idmatrix.csv')
dim(f)
f[1:10,1:10]
#read in garrets landrace matrix
f<-fread('/Users/dangates/Downloads/idmatrix.csv',row.names=1)
f<-data.frame(f)
rownames(f)<-f[,1]
f<-f[,-1]
f[1:10,1:10]
dim(f)
x<-f[1,]
#start going down the rows and finding everyone whos in the group
colnames(f)[x]
x
class(x)
c(x)
unlist(x)
#start going down the rows and finding everyone whos in the group
colnames(f)[unlist(x)]
#start going down the rows and finding everyone whos in the group
colnames(f)[which(unlist(x)==1)]
#start going down the rows and finding everyone whos in the group
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
x<-2
groups[[1]] %in% groups[[x]]
FALSE %in% (groups[[1]] %in% groups[[x]])
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
fals
falss<-c()
for (q in 1:(length(groups)-1)){
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
}
head(falss)
x<-1
x<-2
groups[[2]]
groups[[2]]
groups[[3]]
groups[[4]]
head(falss)
names(falss[which(falss==FALSE)])
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
}
head(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[1]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
falss<-falss[-which(falss==TRUE)]
}
}
names(falss)
head(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
falss<-falss[-which(falss==TRUE)]
}
}
fals
falss
q<-1
x<-2
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
fals
names(fals)<-x
fals
falss<-c(falss,fals)
falss
falss<-falss[-which(falss==TRUE)]
falss
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
falss<-falss[-which(falss==TRUE)]
}
table(names(falss))
1:100 %in% names(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
falss<-falss[-which(falss==TRUE)]
}
table(names(falss))
head(falss)
falss<-c()
for (q in 1:(length(groups)-1)){
print(q)
for (x in (q+1):length(groups)){
fals<-FALSE %in% (groups[[q]] %in% groups[[x]])
names(fals)<-x
falss<-c(falss,fals)
}
}
hclust(f)
f[1:10,1:10]
hclust(f)
groups
groups[[1]]==groups[[2]]
groups[[x]]==groups[[x+1]]
ind<-FALSE %in% groups[[x]]==groups[[x+1]]
ind
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
ind
x<-1
while(f==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
x
ind<-FALSE
x<-1
while(f=FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
ind<-FALSE
x<-1
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
x
#now start with a group and delete any other groups that are identical:
#start with groups[[1]] and go until you hit a TRUE
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
while(ind==FALSE){
grp[[length(grp)+1]]<-groups[[1]]
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
x
length(grp)
grp[[1]]
grp[[2]]
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
grp[[length(grp)+1]]<-groups[[x]]
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
x
length(groups)
#start going down the rows and finding everyone whos in the group
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
grp[[length(grp)+1]]<-groups[[x]]
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
grp[[1]]
grp[[2]]
sapply(grp,length)
#start going down the rows and finding everyone whos in the group
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
groups[[1]]
groups<-apply(f,MARGIN=1,function(x) colnames(f)[which(unlist(x)==1)])
groups<-groups[order(sapply(groups,length))]
sapply(groups,length)
groups[[1]]
groups[[2]]
groups[[3]]
grp<-list()
while(length(groups)>1){
ind<-FALSE
x<-1
grp[[length(grp)+1]]<-groups[[x]]
while(ind==FALSE){
ind<-FALSE %in% (groups[[x]]==groups[[x+1]])
x<-x+1
}
groups<-groups[-c(1:x)]
}
grp
#ok now pull out the groupings that are greater than ~20
txlist<-grp[which(sapply(grp,length)>40)][1]
txlist
#ok now pull out the groupings that are greater than ~20
txlist<-grp[which(sapply(grp,length)>40)][[1]]
txlist
library(readxl)
library(ggplot2)
library(reshape2)
library(dplyr)
library(lme4)
library(data.table)
library(stringr)
library(parallel)
setwd('/Users/dangates/Desktop/NewFitness/')
#The big analyses should be in SwartsFollowUp it's each chromosome and phenotype GWAS and LogodsFWinteraction Rimages (there is a loop below that runs through and opens them all)
#If you want to do the quick end analyses follow the ### numbers (and you'll avoid redoing SNP by SNP GWAS and LMs w/ kinship matrices)
phenos<-read.table('AtestTable.txt')#read in the phenotype
local1<-sapply(as.character(phenos$dataset_description),function(x) strsplit(x,':')[[1]][1],USE.NAMES=FALSE)
local2<-sapply(local1,function(x) strsplit(x,' - ')[[1]][1],USE.NAMES=FALSE)
local2[local2 %in% "Adaptation to Low Levels of Nitrogen Trial "]<-'Adaptation to Low Levels of Nitrogen Trial'
local3<-sapply(local1,function(x) strsplit(x,' - ')[[1]][2],USE.NAMES=FALSE)
local4<-sapply(local1,function(x) strsplit(x,' - ')[[1]][3],USE.NAMES=FALSE)
l3<-local3
local3[local3 %in% '2012B Torreon; Coahuila']<-'2012B'
local4[l3 %in% '2012B Torreon; Coahuila']<-'Torreon; Coahuila'
local4<-sapply(local4,function(x) strsplit(x,';')[[1]][1],USE.NAMES=FALSE)
local4[local4 %in% 'Guadalupe Victoria']<-'Guadalupe-Victoria'
local5<-sapply(local1,function(x) strsplit(x,' - ')[[1]][4],USE.NAMES=FALSE)
local5[local5 %in% 'Normal irrigation treatment']<-'normal irrigation treatment'
local5[local5 %in% ' Normal irrigation treatment']<-'normal irrigation treatment'
local5[local5 %in% ' normal irrigation treatment']<-'normal irrigation treatment'
local5[local5 %in% ' optimal nitrogen treatment']<-'optimal nitrogen treatment'
local5[local5 %in% 'Optimal nitrogen treatment']<-'optimal nitrogen treatment'
local5[local5 %in% 'Optimal nitrogen treatment ']<-'optimal nitrogen treatment'
local5[local5 %in% 'Reduced nitrogen treatment']<-'reduced nitrogen treatment'
local5[local5 %in% ' Reduced nitrogen treatment']<-'reduced nitrogen treatment'
local5[local5 %in% "Reduced nitrogen treatment "]<-'reduced nitrogen treatment'
local5[local5 %in% 'Reduced irrigation treatment']<-'reduced irrigation treatment'
local5[local5 %in% ' Reduced irrigation treatment']<-'reduced irrigation treatment'
#assemble a table
#basically I want to substitute their value of elevation for one of my values of mean annual temp and run the model. Then when I'm down making predictions in the second part I want to sustitute predicted future temps
tabl<-data.frame(value=phenos$phenotypedata_value,phenotype=as.character(phenos$phenotypes_name),tester=as.character(phenos$Tester.GID),trialName=local2,year=local3,locale=local4,treatment=local5,year=phenos$colldate)
conversion<-c('Agua Fria'=107,'Iguala'=756,'Ciudad Obregon'=39,'Celaya'=1766,'Tarimbaro'=1864,'San Pedro Lagunillas'=1265,'Tlaltizapan'=942,'Torreon'=1123,'Cortazar'=1729,'Numaran'=1681,'Guadalupe-Victoria'=790,'Amoloya de Juarez'=2610,'El Batan'=2276)
trialLatLong<-read.table('TrialLatLong.txt',sep='\t',header=1)
load('/Users/dangates/Desktop/SeeDs/WorldClimMat.Rimage')
fMatAllClimVars<-finalMat
#as a really hacky work around, find the individual in fMatAllClim that is closest geographically to each trial then give them that value
dists<-as.matrix(dist(abs(rbind(trialLatLong[,c('latitude','longitude')],fMatAllClimVars[,c('latitude','longitude')]))))
dists[lower.tri(dists,diag=TRUE)]<-NA
kps<-colnames(dists)[sapply(1:13,function(x) which(dists[x,]==min(dists[x,],na.rm=TRUE))[1])]
names(kps)<-names(conversion)
#I need to rerun this so that I can rerun the field weight gwas using this but with different environments
environments<-c('altitude','meanTemp','annualPrecipitation','vap6MonthGrowAvg','pH',"wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
env<-'altitude'
conversion<-fMatAllClimVars[kps,env]
names(conversion)<-names(kps)
tabl$trialElv<-conversion[as.character(tabl$locale)]
tabl$SampleID<-as.character(phenos$Sample.ID.of.DNA.from.single.plants.used.in.GWAS)
felv<-fMatAllClimVars[,env]
names(felv)<-rownames(fMatAllClimVars)
tabl$plantElv<-felv[tabl$SampleID]
phenotypes<-c('Days to anthesis','Plant height','Anthesis silking interval','Field weight','Bare cob weight','Grain weight per hectare')
kps
names(kps)<-names(conversion)
kps
#now I need to update conversion
conversion<-fMatAllClimVars[kps,env]
conversion
names(conversion)<-names(kps)
conversion
#as a really hacky work around, find the individual in fMatAllClim that is closest geographically to each trial then give them that value
dists<-as.matrix(dist(abs(rbind(trialLatLong[,c('latitude','longitude')],fMatAllClimVars[,c('latitude','longitude')]))))
dists
dists[lower.tri(dists,diag=TRUE)]<-NA
kps<-colnames(dists)[sapply(1:13,function(x) which(dists[x,]==min(dists[x,],na.rm=TRUE))[1])]
kps
trialLatLong[1,]
fMatAllClimVars[23,'latitude']
kps[1]
fMatAllClimVars["23",'latitude']
env
tabl<-data.frame(value=phenos$phenotypedata_value,phenotype=as.character(phenos$phenotypes_name),tester=as.character(phenos$Tester.GID),trialName=local2,year=local3,locale=local4,treatment=local5,year=phenos$colldate)
conversion<-c('Agua Fria'=107,'Iguala'=756,'Ciudad Obregon'=39,'Celaya'=1766,'Tarimbaro'=1864,'San Pedro Lagunillas'=1265,'Tlaltizapan'=942,'Torreon'=1123,'Cortazar'=1729,'Numaran'=1681,'Guadalupe-Victoria'=790,'Amoloya de Juarez'=2610,'El Batan'=2276)
trialLatLong<-read.table('TrialLatLong.txt',sep='\t',header=1)
load('/Users/dangates/Desktop/SeeDs/WorldClimMat.Rimage')
fMatAllClimVars<-finalMat
dists<-as.matrix(dist(abs(rbind(trialLatLong[,c('latitude','longitude')],fMatAllClimVars[,c('latitude','longitude')]))))
dists[lower.tri(dists,diag=TRUE)]<-NA
kps<-colnames(dists)[sapply(1:13,function(x) which(dists[x,]==min(dists[x,],na.rm=TRUE))[1])]
names(kps)<-names(conversion)
conversion<-fMatAllClimVars[kps,env]
names(conversion)<-names(kps)
conversion
env
env*2
conversion*2
conversion*10
ls
ls()
tabl<-data.frame(value=phenos$phenotypedata_value,phenotype=as.character(phenos$phenotypes_name),tester=as.character(phenos$Tester.GID),trialName=local2,year=local3,locale=local4,treatment=local5,year=phenos$colldate)
conversion<-c('Agua Fria'=107,'Iguala'=756,'Ciudad Obregon'=39,'Celaya'=1766,'Tarimbaro'=1864,'San Pedro Lagunillas'=1265,'Tlaltizapan'=942,'Torreon'=1123,'Cortazar'=1729,'Numaran'=1681,'Guadalupe-Victoria'=790,'Amoloya de Juarez'=2610,'El Batan'=2276)
trialLatLong<-read.table('TrialLatLong.txt',sep='\t',header=1)
load('/Users/dangates/Desktop/SeeDs/WorldClimMat.Rimage')
fMatAllClimVars<-finalMat
tabl
library(GridLMM)
library(KRLS)
library(qqman)
library(data.table)
phenotypes<-c('Days to anthesis','Plant height','Anthesis silking interval','Field weight','Bare cob weight','Grain weight per hectare')
#environments<-c("wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
environments<-c('altitude','meanTemp','annualPrecipitation','vap6MonthGrowAvg','pH',"wet6MonthGrowAvg","pre6MonthGrowAvg","cld6MonthGrowAvg","Isothermality")
phenot<-'Anthesis silking interval'
#lapply(environments,function(env){
env<-'altitude'
#lapply(environments,function(env){
load(paste('./GWASResiduals/',phenot,'_',env,'_GWASResiduals.Rimage',sep=""))
setwd('/Users/dangates/Desktop/AdaptationScripts2/')
#lapply(environments,function(env){
load(paste('./GWASResiduals/',phenot,'_',env,'_GWASResiduals.Rimage',sep=""))
head(jimbo)
table(paste(jimbo$trialElv,jimbo$locale))
rm(list=ls())
